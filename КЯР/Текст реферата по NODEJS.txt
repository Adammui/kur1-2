Добрый день, сейчас я расскажу о Node.js, а если точнее, о возможностях создания бэкенда на JavaScript. Вы узнаете об особенностях этой технологии, сколько платят программистам за работу с Node и почему возможно стоит изучить Node.js.
   
Для начала. Node.js — среда выполнения кода JavaScript вне браузера. Эта платформа позволяет писать серверный код для динамических веб-страниц и веб-приложений, а также для программ командной строки. Платформа Node предполагает использование одного языка программирования для разработки веб-приложений вместо применения разных языков для работы над фронтендом и бэкендом. Если говорить о языке, то как для фронденда, так и для бэкенда используется один и тот же JavaScript. Разница только в наборе API, которые используют фронтенд и бэкенд разработчики. Браузерный JavaScript использует Web API, которые обеспечивают доступ к DOM и пользовательскому интерфейсу страниц и веб-приложений. Серверный JavaScript использует API, обеспечивающие доступ к файловой системе приложений, http-запросам, потокам.
   
Теперь поговорим о истории данного проекта
Платформа Node.js была представлена в 2009 году. Её создал инженер Райан Даль, а спонсором разработки выступила компания Джойэнт. Компания известна поддержкой ОПЕНСОРС проектов, включая Node.js, Illumos, SmartOS.
Райан Даль использовал для создания Node.js движок ви 8. Платформа реализована с низкоуровневой неблокирующей моделью ввода/вывода и построена на событийно-ориентированной модели вместо традиционной модели параллелизма на основе потоков. Эта модель была выбрана из-за простоты, низких накладных расходов и быстродействия.
В конце 2014 года инженер Фёдор Индутный, который входил в основную команду разработчиков, создал популярный форк — io.js.
Платформа io.js превосходила Node.js в производительности. Но создатели форка уже в 2015 году решили воссоединиться с Node.js, чтобы влиять на развитие основной платформы.
   
Как и где испольуют используют Node.js
Количество платформ, для которых приходится вести разработку, даже в рамках одного проекта, постоянно расширяется. Например, если мы создаем некое веб-решение, у нас есть сайт, видимый пользователям. Затем, серверная часть- набор API, а еще мобильный клиент и настольный клиент. Если команда разработчиков невелика, сложно вести разработку для большого количества совершенно разных окружений, но Node даёт универсальную платформу в которой можно вести подобную разработку.

 В node не нужно придумывать реализацию большинства алгоритмов — вы почти наверняка найдёте готовый пакет. Это позволяет программистам писать приложения, а не заниматься созданием инфраструктуры, на которой они будут работать. Процесс разработки становится быстрее и проще.
Node.js хорошо подходит для разработки веб-приложений, реагирующих на действия пользователя в режиме реального времени. Например, это может быть онлайн-редактор типа Google Docs, который позволяет работать над одним документом нескольким пользователям одновременно.
Node.js легко обрабатывает большое количество запросов одновременно и обеспечивает быстродействие приложения.Поэтому Node.js на бэкенде используют множество известных организаций Netflix, Uber, eBay, Yahoo и др.
 
Возникает вопрос что испольовать для разработки бэкенда Node.js PHP или Python?
Node.js уступает PHP в популярности. Достаточно вспомнить, что на PHP написаны самые популярные системы управления контентом, включая WordPress, джумла, дрюпал. Только на WordPress работает около трети всех сайтов в интернете.
Python же считается одним из лучших языков для ИЗУЧЕНИЯ программирования. Но главная разница между Python и Node.js заключается в сферах применения. Python более универсальный: его используют как в веб-разработке, так и в Data Science.
У разработчиков nodejs есть качественные и удобные инструменты. Например, пакетный менеджер npm, фреймворк Electron для разработки десктопных приложений. Также стоит упомянуть фреймворки Express и Nest.js, предназначенные для разработки веб-приложений.
Это значит что сравнить данные платформы сложно и каждый разработчик выбирает свой вариант, ведь у каждой среды есть свои достоинства.
 
Поговорим о приемуществах nodejs:

Для начала : легкость освоения.
У node достаточно низкий входной порог, а значит программирование на js доcтупно даже для тех, кто раньше не занимался разработкой ПО. Доступность Node.js постоянно повышается благодаря большому количеству новых разработчиков. Платформа продумана таким образом, чтобы к ней было просто присоединиться и начать кодить.
Следующий пункт: скорость написания
которая частично обусловлена следующим пунктом: наличием огромного количества библиотек node package manager
Одним из преимуществ так же является повышенная эффективность разработки, благодаря использованию одного языка для фронт- и бэкенда;
Так же стоит упомянуть постоянное развитие, обновление и дополнение среды.
сейчас активно развивается TypeScript, окоторый привносит в JS типизацию, декораторы и др.
 
У node есть так же и важный недостаток. гибкость и быстрое развитие приводит к тому,что надо постоянно следить за обновлениями и качеством создаваемых библиотек, которые могут быть недостаточно протестированными или и вовсе забагованными;
тоесть при разработке нужно следить за поключенными библиотеками, ведь если библиотека будет удалена или заменена, то программа перестанет работать;
  
Спрос на Node.js-разработчиков устойчиво растёт. Обратите внимание на динамику количества вакансий на сайте jobs.dou.ua.
По данным сервиса «Мой круг» на первую половину 2019 года, средняя зарплата JavaScript разработчика составляет 1.5 тыс долларов в месяц. Нужно понимать, что в эту статистику входят зарплаты как фронтенд-, так и бэкенд-разработчиков на JS. Разработчики на Python зарабатывают примерно столько же, а PHP-программисты получают немного меньше.
На данный момент на hh.ru опубликовано 70 вакансий для Node.js разработчиков в Минске, чать информации представлена на слайде. Соискатели могут рассчитывать на зарплаты до 3500 долларов сша в месяц.
 
Таким образом, Node.js — платформа для запуска кода JavaScript за пределами браузера. Эту технологию используют преимущественно для бэкенд-разработки на JavaScript. По мере роста популярности этой технологии дефицит специалистов будет возрастать, поэтому стоит задуматься об осноении Node, если вас привлекли какие-либо его достоинства.
На этом хочу закончить свою презентацию, можете задать вопросы в чате, если они у вас есть, я постараюсь ответить. Спасибо за внимание

